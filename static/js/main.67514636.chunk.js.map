{"version":3,"sources":["Images/BG_Shapes.png","Utils/ScrollToTop.tsx","Components/.Design/Tokens.tsx","Components/TickerTape/TickerTapeStyling.tsx","Utils/ExternalLinks.tsx","Components/TickerTape/TickerTape.tsx","Components/BackgroundShapes/BackgroundShapes.tsx","Components/Typography/Typography.tsx","Components/Button/ButtonStyling.tsx","Components/Button/Button.tsx","Components/Card/CardStyling.tsx","Components/Card/Card.tsx","Components/Event/EventStyling.tsx","Pages/Content/Home.tsx","Components/Event/Event.tsx","Hooks/ScreenSize.tsx","Utils/Functions.tsx","Pages/Content/Downloads.tsx","Pages/Content/Support.tsx","Pages/Content/Games.tsx","Pages/Content/Events.tsx","Pages/Home.tsx","Pages/404.tsx","App.tsx","index.tsx"],"names":["module","exports","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","top","left","behavior","Colour","FontWeight","FontSize","Links","styled","div","Tokens","midGrey","button","offWhite","tiny","a","BackgroundShapes","img","props","color01","color02","PageHeader","accent02","large","bold","WhiteHeader","SectionHeader","medium","semiBold","SubHeader","lightGrey","regular","P","p","small","extraLight","NavLabel","thin","Copyright","StyledButton","width","StyledNavButton","isSelected","accent01","externalLinkCick","url","newWindow","open","opener","Button","href","label","icon","isExternalLink","onClick","NavButton","StyledCard","wrapContent","midDarkGrey","StyledCardDeck","Card","children","CardDeck","header","StyledTag","span","Styledlink","StyledEvent","Image","HomeContent","youtube","Brands","src","Event","eventName","eventLink","theme","winnerName","winnerLink","target","getWindowDimensions","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","GetYear","Date","getFullYear","IconWrapper","Downloads","itch","github","Support","patreon","colour","Games","Icons","wordDrop","invadersGame","ascension","Events","PageWrapper","HeaderBar","HeaderContent","ContentArea","darkGrey","ContentAreaContent","ContentAreaLinks","LogoContainer","LogoTextWrapper","Home","selectedIndex","setSelectedIndex","PageContent","currentPageContent","setCurrentPageContent","scrollToTop","useRef","current","scrollIntoView","block","Functions","ref","Center","FourZeroFour","history","useHistory","push","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67514636.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BG_Shapes.15872242.png\";","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, [pathname]);\n\n  return null;\n}\n","export enum Colour {\n  darkGrey = \"#222222\",\n  midDarkGrey = \"#333333\",\n  midGrey = \"#444444\",\n  lightGrey = \"#bbbbbb\",\n  offWhite = \"#f5f5f5\",\n  white = \"#ffffff\",\n  black = \"#000000\",\n  accent01 = \"#8e3ce9\",\n  accent02 = \"#4a51e0\",\n}\n\nexport enum FontWeight {\n  thin = \"100\",\n  extraLight = \"200\",\n  light = \"300\",\n  regular = \"400\",\n  medium = \"500\",\n  semiBold = \"600\",\n  bold = \"700\",\n  extraBold = \"800\",\n  black = \"900\",\n}\n\nexport enum FontSize {\n  tiny = \"12px\",\n  small = \"16px\",\n  medium = \"22px\",\n  large = \"42px\",\n}\n","import styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\n\nexport const TickerWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0px;\n  width: 100%;\n  height: 10px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 20px;\n\n  background-color: ${Tokens.Colour.midGrey};\n  text-align: center;\n\n  z-index: 2;\n\n  -webkit-box-shadow: 0px -10px 69px 29px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 0px -10px 69px 29px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px -10px 69px 29px rgba(0, 0, 0, 0.75);\n`;\n\nexport const CloseButton = styled.button`\n  padding: 10px;\n  margin-right: 20px;\n  display: inline-block;\n  border: none;\n  background: none;\n  color: ${Tokens.Colour.offWhite};\n  text-decoration: none;\n  font-size: ${Tokens.FontSize.tiny};\n  font-weight: bold;\n`;\n\nexport const Link = styled.a`\n  text-decoration: none;\n  color: ${Tokens.Colour.offWhite};\n`;\n","export enum Links {\n  facebook = \"https://www.facebook.com/comp3interactive\",\n  instagram = \"https://www.instagram.com/comp3interactive\",\n  youtube = \"https://www.youtube.com/comp3interactive\",\n  github = \"https://www.github.com/comp3interactive\",\n  itch = \"https://comp3interactive.itch.io\",\n  patreon = \"https://www.patreon.com/comp3interactive\",\n  googleplay = \"https://play.google.com/store/apps/dev?id=7011346453411226050\",\n  discord = \"https://discord.gg/wWFsdYy\",\n  twitter = \"https://www.twitter.com/comp3int\",\n  invaders = \"https://www.youtube.com/playlist?list=PLfhbBaEcybmhGhADxKSqqliuCLg3xY_ep\",\n  wordDrop = \"https://play.google.com/store/apps/details?id=com.Comp3Interactive.WordDrop&hl=en_GB&gl=US\",\n  ascension = \"https://play.google.com/store/apps/details?id=com.Comp3Interactive.Ascension&hl=en_GB&gl=US\",\n  invadersGame = \"https://play.google.com/store/apps/details?id=com.Comp3Interactive.InvadersFromOuterspace&hl=en_GB&gl=US\",\n}\n","import React, { useState, useEffect } from \"react\";\nimport { TickerWrapper, CloseButton, Link } from \"./TickerTapeStyling\";\nimport { Links } from \"../../Utils/ExternalLinks\";\n\nexport interface TickerProps {\n  tickerText: string;\n}\n\nexport const TickerTape = ({ tickerText }: TickerProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const tickerTimer = 5000;\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    let timer1 = setTimeout(() => setIsOpen(true), tickerTimer);\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, []);\n\n  return (\n    <>\n      {isOpen && (\n        <TickerWrapper>\n          <div />\n          <Link href={Links.patreon} target=\"_blank\">\n            {tickerText}\n          </Link>\n          <CloseButton onClick={handleClose}>X</CloseButton>\n        </TickerWrapper>\n      )}\n    </>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport img from \"../../Images/BG_Shapes.png\";\n\ninterface GradientProps {\n  color01: string;\n  color02: string;\n}\n\nexport const BackgroundShapes = styled.div<GradientProps>`\n  background-image: url(${img}),\n    linear-gradient(${(props) => props.color01}, ${(props) => props.color02});\n  position: fixed;\n  width: auto;\n  height: auto;\n  top: -28px;\n  left: -28px;\n  right: -28px;\n  bottom: -28px;\n  background-position: center center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  z-index: -1;\n`;\n","import styled from \"@emotion/styled\";\nimport { Colour, FontSize, FontWeight } from \"../.Design/Tokens\";\n\nexport const PageHeader = styled.div`\n  color: ${Colour.accent02};\n  font-size: ${FontSize.large};\n  font-weight: ${FontWeight.bold};\n`;\n\nexport const WhiteHeader = styled.div`\n  @media only screen and (max-width: 1000px) {\n    text-align: left;\n    font-size: 5vw;\n  }\n\n  color: ${Colour.offWhite};\n  font-size: 3vw;\n  font-weight: ${FontWeight.bold};\n  text-align: center;\n`;\n\nexport const SectionHeader = styled.div`\n  color: ${Colour.offWhite};\n  font-size: ${FontSize.medium};\n  font-weight: ${FontWeight.semiBold};\n`;\n\nexport const SubHeader = styled.div`\n  @media only screen and (max-width: 1000px) {\n    font-size: 3vw;\n    text-align: left;\n  }\n\n  color: ${Colour.lightGrey};\n  font-size: 1.5vw;\n  font-weight: ${FontWeight.regular};\n  text-align: center;\n`;\n\nexport const P = styled.p`\n  color: ${Colour.offWhite};\n  font-size: ${FontSize.small};\n  font-weight: ${FontWeight.extraLight};\n`;\n\nexport const NavLabel = styled.div`\n  color: ${Colour.offWhite};\n  font-size: ${FontSize.tiny};\n  font-weight: ${FontWeight.thin};\n`;\n\nexport const Copyright = styled.div`\n  color: ${Colour.lightGrey};\n  font-size: ${FontSize.tiny};\n  font-weight: ${FontWeight.extraLight};\n  text-align: center;\n`;\n","import styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\nimport { ButtonProps, NavButtonProps } from \"./Button\";\n\nexport const StyledButton = styled.button<ButtonProps>`\n  margin: 10px;\n  padding: 10px 20px 10px 20px;\n  display: inline-block;\n  border: 0.125rem solid ${Tokens.Colour.offWhite};\n  border-radius: 2rem;\n  background-color: transparent;\n  color: ${Tokens.Colour.offWhite};\n  width: ${(props) => (props.width ? props.width : \"auto\")};\n  text-decoration: none;\n  font-size: ${Tokens.FontSize.small};\n  font-weight: bold;\n  transition: all 0.2s;\n  text-align: center;\n  ${(props) =>\n    !props.width\n      ? \"display: flex; justify-content: center; align-items: center;\"\n      : null}\n  &:hover {\n    cursor: pointer;\n    background-color: ${Tokens.Colour.offWhite};\n    color: ${Tokens.Colour.midGrey};\n    border: 0.125rem solid transparent;\n    text-decoration: none;\n  }\n  &:focus,\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const StyledNavButton = styled.button<NavButtonProps>`\n  @media only screen and (max-width: 1000px) {\n    font-size: ${Tokens.FontSize.medium};\n  }\n\n  display: inline-block;\n  background-color: transparent;\n  color: ${(props) =>\n    props.isSelected ? Tokens.Colour.accent01 : Tokens.Colour.offWhite};\n  width: auto;\n  text-decoration: none;\n  font-size: ${Tokens.FontSize.large};\n  transition: all 0.2s;\n  text-align: center;\n  border: none;\n  &:hover {\n    cursor: pointer;\n    color: ${Tokens.Colour.accent01};\n  }\n  &:focus,\n  &:focus {\n    outline: none;\n  }\n`;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\nimport { StyledButton, StyledNavButton } from \"./ButtonStyling\";\nimport { NavLabel } from \"../Typography/Typography\";\n\nexport interface ButtonProps {\n  href: string;\n  label?: string;\n  width?: string;\n  icon?: IconDefinition;\n  isExternalLink?: boolean;\n  onClick?: () => void;\n}\n\nexport interface NavButtonProps {\n  href?: string;\n  label?: string;\n  icon: IconDefinition;\n  isExternalLink?: boolean;\n  isSelected: boolean;\n  onClick?: () => void;\n}\n\nconst externalLinkCick = (url: string) => {\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n  if (newWindow) newWindow.opener = null;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  href,\n  label,\n  width,\n  icon,\n  isExternalLink,\n  onClick,\n}) => {\n  return (\n    <StyledButton\n      href={href}\n      label={label}\n      icon={icon}\n      width={width}\n      onClick={isExternalLink ? () => externalLinkCick(href) : onClick}\n    >\n      {icon ? (\n        <>\n          <FontAwesomeIcon icon={icon} /> {label ? <>&nbsp; {label}</> : null}\n        </>\n      ) : (\n        label\n      )}\n    </StyledButton>\n  );\n};\n\nexport const NavButton: React.FC<NavButtonProps> = ({\n  href,\n  label,\n  icon,\n  isExternalLink,\n  isSelected,\n  onClick,\n}) => {\n  return (\n    <StyledNavButton\n      href={href}\n      icon={icon}\n      isSelected={isSelected}\n      onClick={\n        isExternalLink ? () => externalLinkCick(href ? href : \"\") : onClick\n      }\n    >\n      <FontAwesomeIcon icon={icon} />\n      <NavLabel>{label}</NavLabel>\n    </StyledNavButton>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\nimport { CardProps } from \"./Card\";\n\nexport const StyledCard = styled.div<CardProps>`\n  ${(props) =>\n    props.wrapContent &&\n    `\n      @media only screen and (max-width: 1000px) {\n        flex-wrap: wrap;\n      }\n\n      display: flex;\n      flex-direction: row;\n      justify-content: space-evenly;`}\n\n  border: 2px solid ${Tokens.Colour.midGrey};\n  background-color: ${Tokens.Colour.midDarkGrey};\n  border-radius: 15px;\n  padding: 10px;\n  margin: 10px;\n`;\n\nexport const StyledCardDeck = styled.div`\n  @media only screen and (max-width: 1000px) {\n    flex-wrap: wrap;\n  }\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n`;\n","import React from \"react\";\nimport { StyledCard, StyledCardDeck } from \"./CardStyling\";\nimport { SectionHeader } from \"../Typography/Typography\";\n\nexport interface CardProps {\n  wrapContent?: boolean;\n}\n\nexport interface CardDeckProps {\n  header?: string;\n}\n\nexport const Card: React.FC<CardProps> = ({ wrapContent, children }) => {\n  return <StyledCard wrapContent={wrapContent}>{children}</StyledCard>;\n};\n\nexport const CardDeck: React.FC<CardDeckProps> = ({ header, children }) => {\n  return (\n    <>\n      {header ? <SectionHeader>{header}</SectionHeader> : null};\n      <StyledCardDeck>{children}</StyledCardDeck>)\n    </>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\n\nexport const StyledTag = styled.span`\n  color: ${Tokens.Colour.accent02};\n  font-weight: ${Tokens.FontWeight.semiBold};\n  font-size: ${Tokens.FontSize.small};\n`;\n\nexport const Styledlink = styled.a`\n  cursor: pointer;\n  text-decoration: none;\n  font-weight: ${Tokens.FontWeight.medium};\n  color: ${Tokens.Colour.offWhite};\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { PageHeader, SectionHeader, P, Button, Card } from \"../../Components\";\nimport { Links } from \"../../Utils/ExternalLinks\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\n\nexport const StyledEvent = styled.div`\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  @media only screen and (max-width: 1000px) {\n    width: 100%;\n  }\n\n  border-radius: 15px;\n  width: 50%;\n  height: auto;\n`;\n\nexport const HomeContent = () => {\n  return (\n    <>\n      <PageHeader>Welcome</PageHeader>\n      <Card>\n        <P>\n          We are Comp-3 Interactive. We provide useful hints, tips and tutorials\n          on the Unity3D game engine over multiple social media platforms.\n          Started in 2019 with one goal, to provide the tutorials we wish we had\n          ourselves when we started to learn game development.\n        </P>\n        <P>\n          Over the past year we have grown a nice little following over on\n          Facebook and Instagram of developers eager to learn new things, we\n          then branched into YouTube to be able to give a more in-depth\n          experience.\n        </P>\n        <P>\n          Not only that, we also offer a selection of free and paid assets which\n          are available to download via out Itch.io page and also via GitHub for\n          code snippets and utilities.\n        </P>\n        <P>\n          Check out the links below to learn more about the services we offer\n          and find links to where you can find us, or if you're in a hurry to\n          get learning you can click here to be taken directly to our YouTube\n          page! Just don't forget to like, comment and subscribe!\n        </P>\n      </Card>\n\n      <SectionHeader>Suggested Series</SectionHeader>\n      <Card wrapContent={true}>\n        <div>\n          <P>\n            One of our most popular series with beginners is our Lets Make:\n            Invaders From Outerspace series.\n          </P>\n          <P>\n            A 20 episode series where we show you, in detail, how to create your\n            own mobile version of Space Invaders from scratch!\n          </P>\n          <P>\n            All assets used within the project are available to download from\n            our Itch.io page and are completely free to use in any capacity.\n          </P>\n          <Button\n            href={Links.youtube}\n            isExternalLink={true}\n            label={\"Go To Series\"}\n            width={\"90%\"}\n            icon={Brands.faYoutube}\n          />\n        </div>\n\n        <Image src=\"./Images/InvadersFromOuterspace.png\" />\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport { StyledTag, Styledlink } from \"./EventStyling\";\nimport { P, SubHeader } from \"../Typography/Typography\";\nimport { Card } from \"../Card/Card\";\nimport { StyledEvent } from \"../../Pages/Content/Home\";\n\nexport interface EventProps {\n  eventName: string;\n  eventLink: string;\n  theme: string;\n  winnerName: string;\n  winnerLink: string;\n}\n\nexport const Event = ({\n  eventName,\n  eventLink,\n  theme,\n  winnerName,\n  winnerLink,\n}: EventProps) => {\n  return (\n    <StyledEvent>\n      <SubHeader>{eventName}</SubHeader>\n      <Card wrapContent={true}>\n        <P>\n          <StyledTag>JAM:</StyledTag>\n          <Styledlink target=\"_blank\" href={eventLink}>\n            <br />\n            {\"JOIN HERE!\"}\n          </Styledlink>\n        </P>\n        <P>\n          <StyledTag>THEME: </StyledTag> <br />\n          {theme}\n        </P>\n\n        <P>\n          <StyledTag>WINNER: </StyledTag> <br />\n          {winnerName}\n        </P>\n        <P>\n          <StyledTag>WINNING ENTRY: </StyledTag>\n          <Styledlink target=\"_blank\" href={winnerLink}>\n            <br />\n            {\"SEE THE WINNER HERE\"}\n          </Styledlink>\n        </P>\n      </Card>\n    </StyledEvent>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","export function GetYear() {\n  return new Date().getFullYear();\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  PageHeader,\n  Button,\n  P,\n  Card,\n  CardDeck,\n  Colour,\n} from \"../../Components\";\nimport { Links } from \"../../Utils/ExternalLinks\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst IconWrapper = styled.div`\n  font-size: 100px;\n  color: ${Colour.offWhite};\n  text-align: center;\n`;\n\nexport const Downloads = () => {\n  return (\n    <>\n      <PageHeader>Downloads</PageHeader>\n      <Card>\n        <P>\n          Other than tutorials, we also offer a selection of free and premium\n          assets for use in your own games! These range from code snippets and\n          utility functions which can be downloaded via out GitHub Page to a\n          mixture of 2D and 3D game assets, pixel art sprites, UI assets and\n          models available from out Itch.io page! Check out the links below!\n        </P>\n      </Card>\n\n      <CardDeck header={\"Download Links\"}>\n        <Card>\n          <IconWrapper>\n            <FontAwesomeIcon icon={Brands.faItchIo} />\n          </IconWrapper>\n          <P>\n            A mixture of free and premium game assets ready to download and\n            import into your projects!\n          </P>\n          <Button\n            href={Links.itch}\n            icon={Brands.faItchIo}\n            label={\"Itch.io\"}\n            width={\"95%\"}\n            isExternalLink={true}\n          />\n        </Card>\n        <Card>\n          <IconWrapper>\n            <FontAwesomeIcon icon={Brands.faGithub} />\n          </IconWrapper>\n          <P>\n            A mixture of free and premium game assets ready to download and\n            import into your projects!\n          </P>\n          <Button\n            href={Links.github}\n            icon={Brands.faGithub}\n            label={\"GitHub\"}\n            width={\"95%\"}\n            isExternalLink={true}\n          />\n        </Card>\n      </CardDeck>\n    </>\n  );\n};\n","import React from \"react\";\nimport { PageHeader, Button, P, Card, SubHeader } from \"../../Components\";\nimport { Links } from \"../../Utils/ExternalLinks\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\n\nexport const Support = () => {\n  return (\n    <>\n      <PageHeader>Support Us</PageHeader>\n      <Card>\n        <SubHeader>\n          Wondering how you can help us at Comp-3 Interactive? Well there are a\n          few ways...\n        </SubHeader>\n        <P>\n          - You can purchase some of the premium assets we have available on our\n          Itch.io page! You help us and in return you get some snazzy new game\n          assets!\n        </P>\n        <P>\n          - You can support us over on Patreon! Each tier comes with different\n          benefits, check out the link below to see if any seems right for you!\n        </P>\n        <P>\n          - Download our games and play them or watch our YouTube videos, as\n          simple as that. Ad revenue is a huge help and keeps the lights on\n          around here!\n        </P>\n        <Button\n          href={Links.patreon}\n          icon={Brands.faPatreon}\n          label={\"Support Us On Patreon\"}\n          isExternalLink={true}\n          width={\"96%\"}\n        />\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  PageHeader,\n  Button,\n  P,\n  Card,\n  CardDeck,\n  SubHeader,\n} from \"../../Components\";\nimport { Links } from \"../../Utils/ExternalLinks\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\";\n\ninterface ButtonColour {\n  colour: string;\n}\n\nconst IconWrapper = styled.div<ButtonColour>`\n  font-size: 100px;\n  color: ${(props) => props.colour};\n  text-align: center;\n`;\n\nexport const Games = () => {\n  return (\n    <>\n      <PageHeader>Our Games</PageHeader>\n      <Card>\n        <P>\n          We do make games occasionally too! Mostly mobile games, specifically\n          Android. If you'd like to play any then check out the links below!\n        </P>\n      </Card>\n\n      <CardDeck header={\"Google Play Links\"}>\n        <Card>\n          <IconWrapper colour={\"#9231da\"}>\n            <FontAwesomeIcon icon={Icons.faArrowCircleDown} />\n          </IconWrapper>\n          <SubHeader>Word Drop</SubHeader>\n          <P>\n            Find as many words from the array of tiles as you can within the\n            time limit!\n          </P>\n          <Button\n            href={Links.wordDrop}\n            icon={Brands.faGooglePlay}\n            label={\"Word Drop\"}\n            width={\"95%\"}\n            isExternalLink={true}\n          />\n        </Card>\n        <Card>\n          <IconWrapper colour={\"#a8d65b\"}>\n            <FontAwesomeIcon icon={Icons.faPastafarianism} />\n          </IconWrapper>\n          <SubHeader>Invaders From Outerspace</SubHeader>\n          <P>\n            A clone of Space Invaders originally made for the tutorial series on\n            my YouTube channel!\n          </P>\n          <Button\n            href={Links.invadersGame}\n            icon={Brands.faGooglePlay}\n            label={\"Invaders from Outerspace\"}\n            width={\"95%\"}\n            isExternalLink={true}\n          />\n        </Card>\n        <Card>\n          <IconWrapper colour={\"#ea5234\"}>\n            <FontAwesomeIcon icon={Icons.faKhanda} />\n          </IconWrapper>\n          <SubHeader>Ascension</SubHeader>\n          <P>\n            Jump and attack, simple to play but hard to master! How high can you\n            climb?\n          </P>\n          <Button\n            href={Links.ascension}\n            icon={Brands.faGooglePlay}\n            label={\"Ascension\"}\n            width={\"95%\"}\n            isExternalLink={true}\n          />\n        </Card>\n      </CardDeck>\n    </>\n  );\n};\n","import React from \"react\";\nimport { PageHeader, SectionHeader, P, Card, Event } from \"../../Components\";\n\nexport const Events = () => {\n  return (\n    <>\n      <PageHeader>Events</PageHeader>\n      <SectionHeader>Current Events</SectionHeader>\n      <Card>\n        <P>Unfortunatly, there are no events active at the moment.</P>\n        <P>Check back soon for more game jams!</P>\n      </Card>\n\n      <SectionHeader>Previous Events</SectionHeader>\n      <Event\n        eventName={\"Comp-3 Interactive Jam Butty 2020\"}\n        eventLink={\"https://itch.io/jam/comp-3-jam-butty-01\"}\n        theme={\"Bugs\"}\n        winnerName={\"Autoquark\"}\n        winnerLink={\"https://autoquark.itch.io/release-day\"}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  BackgroundShapes,\n  Colour,\n  WhiteHeader,\n  SubHeader,\n  Button,\n  Copyright,\n  NavButton,\n} from \"../Components\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\";\nimport { Links } from \"../Utils/ExternalLinks\";\nimport useWindowDimensions from \"../Hooks/ScreenSize\";\nimport * as Functions from \"../Utils/Functions\";\nimport * as PageContent from \"./Content\";\n\nconst PageWrapper = styled.div`\n  @media only screen and (min-width: 1001px) {\n    flex-direction: row;\n  }\n\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst HeaderBar = styled.div`\n  @media only screen and (max-width: 1000px) {\n    height: 15vh;\n    border-radius: 30px 30px 0px 0px;\n    width: 90vw;\n    min-width: 90vw;\n  }\n\n  min-width: 400px;\n  border-radius: 30px;\n  width: 25vw;\n  height: 80vh;\n  background-color: ${Colour.midGrey};\n`;\n\nconst HeaderContent = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin: 10px;\n    flex-direction: row;\n  }\n\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n\n  margin: 50px 90px 50px 50px;\n  height: 85%;\n`;\n\nconst ContentArea = styled.div`\n  @media only screen and (max-width: 1000px) {\n    height: 75vh;\n    border-radius: 0px 0px 30px 30px;\n    width: 90vw;\n    margin-left: 0px;\n  }\n\n  margin-left: -50px;\n  border-radius: 30px;\n  width: 50vw;\n  height: 80vh;\n  background-color: ${Colour.darkGrey};\n`;\n\nconst ContentAreaContent = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin: 0px 20px;\n  }\n\n  margin: 0px 50px 20px 50px;\n  height: 80%;\n\n  overflow-y: scroll;\n`;\n\nconst ContentAreaLinks = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  align-content: center;\n  flex-direction: row;\n  padding: 10px;\n\n  height: 10%;\n`;\n\nconst LogoContainer = styled.img`\n  @media only screen and (max-width: 1000px) {\n    height: 75px;\n  }\n\n  height: 200px;\n`;\n\nconst LogoTextWrapper = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin-left: 10px;\n    margin-right: 20px;\n  }\n`;\n\nexport const Image = styled.img`\n  @media only screen and (max-width: 1000px) {\n    width: 100%;\n  }\n\n  border-radius: 15px;\n  width: 50%;\n  height: auto;\n`;\n\nexport const Home = () => {\n  const { width } = useWindowDimensions();\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [currentPageContent, setCurrentPageContent] = useState(\n    PageContent.HomeContent\n  );\n\n  const scrollToTop = useRef<null | HTMLDivElement>(null);\n  useEffect(() => {\n    if (scrollToTop.current !== null)\n      scrollToTop!.current!.scrollIntoView({\n        block: \"end\",\n        behavior: \"smooth\",\n      });\n  }, [currentPageContent]);\n\n  return (\n    <>\n      <BackgroundShapes color01={Colour.accent01} color02={Colour.accent02} />\n      <PageWrapper>\n        <HeaderBar>\n          <HeaderContent>\n            <LogoContainer src=\"./Images/Bottlecaps/comp3.png\" />\n            <LogoTextWrapper>\n              <WhiteHeader>Comp-3 Interactive</WhiteHeader>\n              <SubHeader>Subscribe.Follow.Learn()</SubHeader>\n            </LogoTextWrapper>\n\n            <Button\n              href={Links.youtube}\n              label={width > 1000 ? \"Start Learning\" : \"\"}\n              icon={Brands.faYoutube}\n              isExternalLink={true}\n            />\n            {width > 1000 && (\n              <Copyright>\n                Copyright &copy; Comp-3 Interactive 2019-{Functions.GetYear()}.\n                <br />\n                All rights reserved\n              </Copyright>\n            )}\n          </HeaderContent>\n        </HeaderBar>\n        <ContentArea>\n          <ContentAreaLinks>\n            <NavButton\n              icon={Icons.faHome}\n              label={\"Home\"}\n              isSelected={selectedIndex === 0}\n              onClick={() => {\n                setSelectedIndex(0);\n                setCurrentPageContent(PageContent.HomeContent);\n              }}\n            />\n            <NavButton\n              icon={Icons.faCalendarAlt}\n              label={\"Events\"}\n              isSelected={selectedIndex === 1}\n              onClick={() => {\n                setSelectedIndex(1);\n                setCurrentPageContent(PageContent.Events);\n              }}\n            />\n            <NavButton\n              icon={Icons.faCloudDownloadAlt}\n              label={\"Downloads\"}\n              isSelected={selectedIndex === 2}\n              onClick={() => {\n                setSelectedIndex(2);\n                setCurrentPageContent(PageContent.Downloads);\n              }}\n            />\n            <NavButton\n              icon={Icons.faPlayCircle}\n              label={\"Games\"}\n              isSelected={selectedIndex === 3}\n              onClick={() => {\n                setSelectedIndex(3);\n                setCurrentPageContent(PageContent.Games);\n              }}\n            />\n            <NavButton\n              icon={Icons.faHeartbeat}\n              label={\"Support\"}\n              isSelected={selectedIndex === 4}\n              onClick={() => {\n                setSelectedIndex(4);\n                setCurrentPageContent(PageContent.Support);\n              }}\n            />\n          </ContentAreaLinks>\n          <ContentAreaContent>\n            <div ref={scrollToTop} />\n            {currentPageContent}\n          </ContentAreaContent>\n          {width <= 1000 && (\n            <Copyright>\n              Copyright &copy; Comp-3 Interactive 2019-{Functions.GetYear()}.\n              <br />\n              All rights reserved\n            </Copyright>\n          )}\n        </ContentArea>\n      </PageWrapper>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport styled from \"@emotion/styled\";\nimport {\n  BackgroundShapes,\n  Colour,\n  WhiteHeader,\n  SubHeader,\n  Button,\n  Copyright,\n  PageHeader,\n  Card,\n  P,\n  SectionHeader,\n} from \"../Components\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\";\nimport { Links } from \"../Utils/ExternalLinks\";\nimport useWindowDimensions from \"../Hooks/ScreenSize\";\nimport * as Functions from \"../Utils/Functions\";\n\nconst PageWrapper = styled.div`\n  @media only screen and (min-width: 1001px) {\n    flex-direction: row;\n  }\n\n  height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst HeaderBar = styled.div`\n  @media only screen and (max-width: 1000px) {\n    height: 15vh;\n    border-radius: 30px 30px 0px 0px;\n    width: 90vw;\n    min-width: 90vw;\n  }\n\n  min-width: 400px;\n  border-radius: 30px;\n  width: 25vw;\n  height: 80vh;\n  background-color: ${Colour.midGrey};\n`;\n\nconst HeaderContent = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin: 10px;\n    flex-direction: row;\n  }\n\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n\n  margin: 50px 90px 50px 50px;\n  height: 85%;\n`;\n\nconst ContentArea = styled.div`\n  @media only screen and (max-width: 1000px) {\n    height: 75vh;\n    border-radius: 0px 0px 30px 30px;\n    width: 90vw;\n    margin-left: 0px;\n  }\n\n  margin-left: -50px;\n  border-radius: 30px;\n  width: 50vw;\n  height: 80vh;\n  background-color: ${Colour.darkGrey};\n`;\n\nconst ContentAreaContent = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin: 0px 20px;\n  }\n\n  margin: 50px 50px 20px 50px;\n  height: 80%;\n\n  overflow-y: scroll;\n`;\n\nconst LogoContainer = styled.img`\n  @media only screen and (max-width: 1000px) {\n    height: 75px;\n  }\n\n  height: 200px;\n`;\n\nconst LogoTextWrapper = styled.div`\n  @media only screen and (max-width: 1000px) {\n    margin-left: 10px;\n    margin-right: 20px;\n  }\n`;\n\nexport const Image = styled.img`\n  @media only screen and (max-width: 1000px) {\n    width: 100%;\n  }\n\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 20%;\n`;\n\nexport const Center = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FourZeroFour = () => {\n  const history = useHistory();\n  const { width } = useWindowDimensions();\n\n  const onClick = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <>\n      <BackgroundShapes color01={Colour.accent01} color02={Colour.accent02} />\n      <PageWrapper>\n        <HeaderBar>\n          <HeaderContent>\n            <LogoContainer src=\"./Images/Bottlecaps/Comp3.png\" />\n            <LogoTextWrapper>\n              <WhiteHeader>Comp-3 Interactive</WhiteHeader>\n              <SubHeader>Subscribe.Follow.Learn()</SubHeader>\n            </LogoTextWrapper>\n\n            <Button\n              href={Links.youtube}\n              label={width > 1000 ? \"Start Learning\" : \"\"}\n              icon={Brands.faYoutube}\n            />\n            {width > 1000 && (\n              <Copyright>\n                Copyright &copy; Comp-3 Interactive 2019-{Functions.GetYear()}.\n                <br />\n                All rights reserved\n              </Copyright>\n            )}\n          </HeaderContent>\n        </HeaderBar>\n        <ContentArea>\n          <ContentAreaContent>\n            <PageHeader>Oops... 404</PageHeader>\n            <SectionHeader>STOP MESSING AROUND!</SectionHeader>\n            <Image src=\"./Images/Illustrations/404.png\" />\n            <Card>\n              <P>\n                Oops... Somehow you've managed to find a page that doesn't\n                actually exist!!\n              </P>\n              <P>\n                If you think this might be a mistake then please let me know so\n                I can fix it as soon as possible! Otherwise, click the link\n                below to be taken back to the main website!\n              </P>\n            </Card>\n            <Center>\n              <Button\n                href=\"/\"\n                label={\"Back to civilization\"}\n                onClick={onClick}\n                icon={Icons.faArrowAltCircleLeft}\n              />\n            </Center>\n          </ContentAreaContent>\n        </ContentArea>\n        {width <= 1000 && (\n          <Copyright>\n            Copyright &copy; Comp-3 Interactive 2019-{Functions.GetYear()}.\n            <br />\n            All rights reserved\n          </Copyright>\n        )}\n      </PageWrapper>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ScrollToTop from \"./Utils/ScrollToTop\";\n// Pages\nimport { Home } from \"./Pages/Home\";\nimport { FourZeroFour } from \"./Pages/404\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <ScrollToTop />\n      <Switch>\n        <Route path={\"/\"} exact component={Home} />\n        <Route component={FourZeroFour} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}