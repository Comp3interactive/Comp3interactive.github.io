{"version":3,"sources":["Components/.Design/Tokens.tsx","Components/Typography/Typography.tsx","Components/Link/Link.tsx","Utils/ExternalLinks.tsx","Pages/UnderConstruction.tsx","Components/Card/Card.tsx","Components/DivBoxes/DivBox.tsx","Components/Header/Header.tsx","Components/Footer/Footer.tsx","Pages/ComponentPlayground.tsx","App.tsx","index.tsx"],"names":["Colour","Font","standard","bold","tiny","small","medium","large","xl","Styling","ConstructionTextStyle","styled","div","Tokens","StyledHeader","StyledSubHeader","StyledCardHeaderText","StyledCardSubtitleText","StyledCardBodyText","StyledCardFooterText","LinkContainer","StyledLink","a","Link","label","href","Links","bounce","keyframes","StyledImage","img","UnderConstruction","src","alt","CardContainer","LinkBoxWrapper","CardBody","CardFooter","CardheaderImage","CardheaderImageContainer","TextWrapper","Card","header","subheader","body","cardImageURL","footerText","HeaderDiv","HeaderWrapper","HeaderTop","ImageWrapper","Header","FooterWrapper","LogoWrapper","IconWrapper","LinkWrapper","Footer","icon","Brands","GridContainer","ComponentPlayground","fluid","nogutter","md","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bbebee5.chunk.js","sourcesContent":["export const Colour = {\n  green: \"#61892f\",\n  darkGreen: \"#577A2C\",\n  lightGrey: \"#DBDBDB\",\n  mediumGrey: \"#4D5061\",\n  darkGrey: \"#232528\",\n  black: \"#0D1B1E\",\n  white: \"#f1f1f8\",\n};\n\nexport const Font = {\n  weight: {\n    standard: \"400\",\n    bold: \"700\",\n  },\n  sizes: {\n    tiny: \"12px\",\n    small: \"16px\",\n    medium: \"22px\",\n    large: \"32px\",\n    xl: \"5vw\",\n  },\n};\n\nexport const Styling = {\n  roundedBorderSmall: \"10px\",\n  roundedBorderMedium: \"20px\",\n};\n","import styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\n\nexport const ConstructionTextStyle = styled.div`\n  font-size: ${Tokens.Font.sizes.large};\n  text-align: center;\n  margin-bottom: 50px;\n  color: white;\n  margin-top: 20px;\n\n  background: -webkit-linear-gradient(#eee, #333);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nexport const StyledHeader = styled.div`\n  @media only screen and (max-width: 600px) {\n    font-size: ${Tokens.Font.sizes.large};\n  }\n\n  font-size: ${Tokens.Font.sizes.xl};\n  font-weight: ${Tokens.Font.weight.bold};\n  color: ${Tokens.Colour.white};\n  text-align: center;\n`;\n\nexport const StyledSubHeader = styled.div`\n  @media only screen and (max-width: 600px) {\n    font-size: ${Tokens.Font.sizes.small};\n  }\n\n  font-size: ${Tokens.Font.sizes.medium};\n  font-weight: ${Tokens.Font.weight.bold};\n  color: ${Tokens.Colour.green};\n  text-align: center;\n  margin-bottom: 25px;\n`;\n\nexport const StyledText = styled.div`\n  font-size: ${Tokens.Font.sizes.medium};\n  color: ${Tokens.Colour.darkGrey};\n`;\n\nexport const StyledCardHeaderText = styled.div`\n  font-size: ${Tokens.Font.sizes.large};\n  font-weight: ${Tokens.Font.weight.bold};\n  color: ${Tokens.Colour.white};\n`;\n\nexport const StyledCardSubtitleText = styled.div`\n  font-size: ${Tokens.Font.sizes.medium};\n  color: ${Tokens.Colour.darkGrey};\n`;\n\nexport const StyledCardBodyText = styled.div`\n  font-size: ${Tokens.Font.sizes.small};\n  color: ${Tokens.Colour.mediumGrey};\n`;\n\nexport const StyledCardFooterText = styled.div`\n  font-size: ${Tokens.Font.sizes.tiny};\n  font-style: italic;\n  color: ${Tokens.Colour.lightGrey};\n  font-weight: ${Tokens.Font.weight.bold};\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\n\nexport interface LinkProps {\n  label: string;\n  href: string;\n}\n\nconst LinkContainer = styled.div`\n  text-align: center;\n`;\n\nconst StyledLink = styled.a`\n  font-size: ${Tokens.Font.sizes.medium};\n  margin-bottom: 10px;\n  color: ${Tokens.Colour.green};\n  margin-top: 20px;\n  text-decoration: none;\n`;\n\nexport const Link = ({ label, href }: LinkProps) => {\n  return (\n    <LinkContainer>\n      <StyledLink href={href}>{label}</StyledLink>\n    </LinkContainer>\n  );\n};\n","export const Links = {\n  facebook: \"https://www.facebook.com/comp3interactive\",\n  instagram: \"https://www.instagram.com/comp3interactive\",\n  youtube: \"https://www.youtube.com/comp3interactive\",\n  github: \"https://www.github.com/comp3interactive\",\n  itch: \"https://comp3interactive.itch.io\",\n  patreon: \"https://www.patreon.com/comp3interactive\",\n  googleplay: \"https://play.google.com/store/apps/dev?id=7011346453411226050\",\n  discord: \"https://discord.gg/wWFsdYy\",\n  twitter: \"https://www.twitter.com/comp3int\",\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ConstructionTextStyle } from \"../Components/Typography/Typography\";\nimport { keyframes } from \"@emotion/core\";\nimport { Link } from \"../Components/Link/Link\";\nimport { Links } from \"../Utils/ExternalLinks\";\n\nconst bounce = keyframes`\n  from, 20%, 53%, 80%, to {\n    transform: translate3d(0,0,0);\n  }\n\n  40%, 43% {\n    transform: translate3d(0, -30px, 0);\n  }\n\n  70% {\n    transform: translate3d(0, -15px, 0);\n  }\n\n  90% {\n    transform: translate3d(0,-4px,0);\n  }\n`;\n\nconst StyledImage = styled.img`\n  display: block;\n  margin: 0 auto;\n  width: 20%;\n\n  animation: ${bounce} 2s infinite linear;\n`;\n\nexport const UnderConstruction = () => {\n  return (\n    <>\n      <ConstructionTextStyle>\n        THIS PAGE IS UNDER CONSTRUCTION\n      </ConstructionTextStyle>\n      <StyledImage src=\"./Images/Bottlecaps/comp3.png\" alt=\"comp3 logo\" />\n      <ConstructionTextStyle>You can still find us here:</ConstructionTextStyle>\n      <Link label=\"YouTube\" href={Links.youtube} />\n      <Link label=\"Facebook\" href={Links.facebook} />\n      <Link label=\"Instagram\" href={Links.instagram} />\n      <Link label=\"Discord\" href={Links.discord} />\n      <Link label=\"Twitter\" href={Links.twitter} />\n      <Link label=\"Patreon\" href={Links.patreon} />\n      <Link label=\"GitHub\" href={Links.github} />\n      <Link label=\"Itch.io\" href={Links.itch} />\n      <Link label=\"Google Play\" href={Links.googleplay} />\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\nimport {\n  StyledCardSubtitleText,\n  StyledCardHeaderText,\n  StyledCardBodyText,\n  StyledCardFooterText,\n} from \"../Typography/Typography\";\n\nexport interface CardProps {\n  header: string;\n  subheader: string;\n  body: string;\n  cardImageURL: string;\n  href?: string;\n  footerText?: string;\n}\n\nconst CardContainer = styled.div`\n  margin: 0 auto;\n  width: 90%;\n  transition: transform 0.2s;\n  margin-bottom: 20px;\n  background-color: transparent;\n  border-radius: ${Tokens.Styling.roundedBorderSmall}\n    ${Tokens.Styling.roundedBorderSmall} ${Tokens.Styling.roundedBorderSmall}\n    ${Tokens.Styling.roundedBorderSmall};\n\n  -webkit-box-shadow: 0px 0px 19px 0px rgba(0, 0, 0, 0.3);\n  -moz-box-shadow: 0px 0px 19px 0px rgba(0, 0, 0, 0.3);\n  box-shadow: 0px 0px 19px 0px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    -ms-transform: scale(1.05);\n    -webkit-transform: scale(1.05);\n    transform: scale(1.05);\n  }\n`;\n\nconst LinkBoxWrapper = styled.a`\n  text-decoration: none;\n`;\n\nconst CardBody = styled.div`\n  min-height: 200px;\n  background-color: ${Tokens.Colour.lightGrey};\n  padding: 20px;\n`;\n\nconst CardFooter = styled.div`\n  border-radius: 0 0 ${Tokens.Styling.roundedBorderSmall}\n    ${Tokens.Styling.roundedBorderSmall};\n  background-color: ${Tokens.Colour.black};\n  padding: 10px;\n  text-align: right;\n  min-height: 15px;\n`;\n\nconst CardheaderImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: ${Tokens.Styling.roundedBorderSmall}\n    ${Tokens.Styling.roundedBorderSmall} 0 0;\n  opacity: 0.4;\n`;\n\nconst CardheaderImageContainer = styled.div`\n  position: relative;\n  text-align: center;\n  color: white;\n  background: black;\n  border-radius: ${Tokens.Styling.roundedBorderSmall}\n    ${Tokens.Styling.roundedBorderSmall} 0 0;\n  border-bottom: 3px solid ${Tokens.Colour.darkGrey};\n`;\n\nconst TextWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Card = ({\n  header,\n  subheader,\n  body,\n  cardImageURL,\n  href,\n  footerText,\n}: CardProps) => {\n  return (\n    <CardContainer>\n      <LinkBoxWrapper href={href}>\n        <CardheaderImageContainer>\n          <CardheaderImage src={cardImageURL} />\n          <TextWrapper>\n            <StyledCardHeaderText>{header}</StyledCardHeaderText>\n          </TextWrapper>\n        </CardheaderImageContainer>\n        <CardBody>\n          <StyledCardSubtitleText>{subheader}</StyledCardSubtitleText>\n          <br />\n          <StyledCardBodyText>{body}</StyledCardBodyText>\n        </CardBody>\n        <CardFooter>\n          <StyledCardFooterText>{footerText}</StyledCardFooterText>\n        </CardFooter>\n      </LinkBoxWrapper>\n    </CardContainer>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\n\nexport const LightToDarkGreyDiv = styled.div`\n  background-image: -webkit-linear-gradient(\n    30deg,\n    ${Tokens.Colour.mediumGrey} 50%,\n    ${Tokens.Colour.darkGrey} 50%\n  );\n`;\n\nexport const DarkToLightGreyDiv = styled.div`\n  background-image: -webkit-linear-gradient(\n    150deg,\n    ${Tokens.Colour.darkGrey} 50%,\n    ${Tokens.Colour.mediumGrey} 50%\n  );\n`;\n\nexport const DarkGreyToGreenDiv = styled.div`\n  background-image: -webkit-linear-gradient(\n    150deg,\n    ${Tokens.Colour.darkGrey} 50%,\n    ${Tokens.Colour.green} 50%\n  );\n`;\n\nexport const GreenToDarkGreen = styled.div`\n  background-image: -webkit-linear-gradient(\n    150deg,\n    ${Tokens.Colour.darkGrey} 50%,\n    ${Tokens.Colour.black} 50%\n  );\n`;\n\nexport const HeaderDiv = styled.div`\n  background-image: -webkit-linear-gradient(\n    95deg,\n    transparent 50%,\n    ${Tokens.Colour.black} 50%\n  );\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\nimport { HeaderDiv } from \"../DivBoxes/DivBox\";\nimport * as Typo from \"../Typography/Typography\";\n\nconst HeaderWrapper = styled.div`\n  min-height: 100px;\n  padding: 25px 10px 10px 10px;\n  margin-bottom: 50px;\n`;\n\nconst HeaderTop = styled.div`\n  background-color: ${Tokens.Colour.black};\n`;\n\nconst ImageWrapper = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 250px;\n`;\n\nexport const Header = () => {\n  return (\n    <>\n      <HeaderTop />\n      <HeaderDiv>\n        <HeaderWrapper>\n          <ImageWrapper src=\"./Images/Bottlecaps/comp3.png\" />\n          <Typo.StyledHeader>COMP-3 INTERACTIVE</Typo.StyledHeader>\n          <Typo.StyledSubHeader>Subscribe.Follow.Learn()</Typo.StyledSubHeader>\n        </HeaderWrapper>\n      </HeaderDiv>\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as Tokens from \"../.Design/Tokens\";\nimport { StyledSubHeader } from \"../Typography/Typography\";\nimport * as Brands from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Links } from \"../../Utils/ExternalLinks\";\n\nconst FooterWrapper = styled.div`\n  background-color: ${Tokens.Colour.black};\n  min-height: 200px;\n  padding: 60px 10px 10px 10px;\n  text-align: center;\n`;\n\nconst LogoWrapper = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 120px;\n  margin-bottom: -60px;\n`;\n\nconst IconWrapper = styled.div`\n  text-align: center;\n  font-size: 35px;\n  color: white;\n`;\n\nconst LinkWrapper = styled.a`\n  color: white;\n  padding: 10px;\n`;\n\nexport const Footer = () => {\n  return (\n    <>\n      <LogoWrapper src=\"./Images/Bottlecaps/comp3.png\" />\n      <FooterWrapper>\n        <StyledSubHeader>Quick links</StyledSubHeader>\n        <IconWrapper>\n          <LinkWrapper href={Links.youtube}>\n            <FontAwesomeIcon icon={Brands.faYoutube} />\n          </LinkWrapper>\n          <LinkWrapper href={Links.facebook}>\n            <FontAwesomeIcon icon={Brands.faFacebook} />\n          </LinkWrapper>\n          <LinkWrapper href={Links.instagram}>\n            <FontAwesomeIcon icon={Brands.faInstagram} />\n          </LinkWrapper>\n          <LinkWrapper href={Links.discord}>\n            <FontAwesomeIcon icon={Brands.faDiscord} />\n          </LinkWrapper>\n        </IconWrapper>\n      </FooterWrapper>\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"../Components/Card/Card\";\nimport { Header } from \"../Components/Header/Header\";\nimport { Footer } from \"../Components/Footer/Footer\";\nimport { TickerTape } from \"../Components/TickerTape/TickerTape\";\n\nimport { Container, Row, Col } from \"react-grid-system\";\nimport styled from \"@emotion/styled\";\nimport * as Tokens from \"../Components/.Design/Tokens\";\n\nconst GridContainer = styled.div`\n  display: block;\n  margin: 0 auto;\n  max-width: 1000px;\n`;\n\nexport const ComponentPlayground = () => {\n  return (\n    <>\n      {/* <TickerTape tickerText=\"Check out the latest videos\" /> */}\n      <Header />\n      <GridContainer>\n        <Container fluid>\n          <Row nogutter>\n            <Col md={4}>\n              <Card\n                header=\"LEARN\"\n                subheader=\"Come learn to code\"\n                body=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec imperdiet varius turpis, at porttitor nulla malesuada ut. Sed eu scelerisque est. Ut in lectus orci. Morbi nec nisl libero. Pellentesque in enim elit. Suspendisse suscipit risus eget velit lacinia scelerisque. Vivamus sed consectetur sapien, quis pellentesque elit. Pellentesque lobortis libero sem, vitae dapibus nisi finibus sed. Etiam sit amet erat sodales turpis volutpat tristique. Sed et venenatis felis.\"\n                cardImageURL=\"./Images/TestImage.jpeg\"\n                href=\"https://www.google.com\"\n                footerText=\"Learn More →\"\n              />\n            </Col>\n            <Col md={4}>\n              <Card\n                header=\"CODE\"\n                subheader=\"I can teach you how to code\"\n                body=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec imperdiet varius turpis, at porttitor nulla malesuada ut. Sed eu scelerisque est. Ut in lectus orci. Morbi nec nisl libero. Pellentesque in enim elit. Suspendisse suscipit risus eget velit lacinia scelerisque. Vivamus sed consectetur sapien, quis pellentesque elit. Pellentesque lobortis libero sem, vitae dapibus nisi finibus sed. Etiam sit amet erat sodales turpis volutpat tristique. Sed et venenatis felis.\"\n                cardImageURL=\"./Images/TestImage.jpeg\"\n              />\n            </Col>\n            <Col md={4}>\n              <Card\n                header=\"FREE STUFF\"\n                subheader=\"I give away assets and stuff\"\n                body=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec imperdiet varius turpis, at porttitor nulla malesuada ut. Sed eu scelerisque est. Ut in lectus orci. Morbi nec nisl libero. Pellentesque in enim elit. Suspendisse suscipit risus eget velit lacinia scelerisque. Vivamus sed consectetur sapien, quis pellentesque elit. Pellentesque lobortis libero sem, vitae dapibus nisi finibus sed. Etiam sit amet erat sodales turpis volutpat tristique. Sed et venenatis felis.\"\n                cardImageURL=\"./Images/TestImage.jpeg\"\n                footerText=\"Learn More →\"\n              />\n            </Col>\n          </Row>\n        </Container>\n      </GridContainer>\n\n      <Footer />\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { UnderConstruction } from \"./Pages/UnderConstruction\";\nimport { ComponentPlayground } from \"./Pages/ComponentPlayground\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route path=\"/\" exact component={UnderConstruction} />\n        <Route path=\"/Playground\" exact component={ComponentPlayground} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}